feign:
  client:
    config:
      default:
        connectTimeout: 7000
        readTimeout: 7000
  hystrix:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 8000

#actuator健康检测配置
management:
  endpoints:
    web:
      exposure :
        include: refresh,health,info
  endpoint:
    health:
      show-details: ALWAYS


eureka:
  instance:
    #如果项目配置有 server.servlet.context-path 属性，想要被 spring boot admin 监控，就要配置以下属性
    #告诉注册中心actuator访问路径
    status-page-url-path: ${server.servlet.context-path}/actuator/info
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    home-page-url-path: /
    #注册到eureka唯一的服务实例ID
    instance-id: ${spring.application.name}-${spring.cloud.client.ip-address}:${server.port}
    hostname: eureka-service
    #指定ip,默认去本地ip
#    ip-address: locahost
    prefer-ip-address: true
    metadata-map:
      # 使用 spring boot admin 时,如果设置了 server.context-path,需要配置下面2个,否则在admin server 无法获取完整的监控数据
      management:
        context-path: ${server.servlet.context-path}/actuator
      user.name: ${spring.security.user.name:thatman}
      user.password: ${spring.security.user.password:miamoro1y}
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://thatman-eureka:miamoro1y-eureka@localhost:8000/eureka-service/eureka/

spring:
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8
      username: root
      password: 123456
      driver-class-name: com.mysql.jdbc.Driver
      initialSize: 5
      #空闲的连接数个数
      minIdle: 5
      #最大连接数个数
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      #系统启动时通过该sql语句验证数据库是否可用，例如oracle用SELECT 'x' from dual，mysql用SELECT 'x'
      validationQuery: SELECT 'X'
      #启用空闲连接检测，以便回收
      testWhileIdle: true
      #从连接池获取连接时，是否检测连接可用性，开启性能会有些许影响
      testOnBorrow: false
      #释放连接到连接池时，是否检测连接可用性，开启性能会有些许影响
      testOnReturn: false
      # 游标是否缓存
      poolPreparedStatements: false
      #暂离理解为游标缓存数
      maxPoolPreparedStatementPerConnectionSize: -1
      # 通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat；日志用的filter:log4j；防御sql注入的filter:wall
      filters: stat #,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      db-type: com.alibaba.druid.pool.DruidDataSource

    # 合并多个DruidDataSource的监控数据
    #  #spring.datasource.useGlobalDataSourceStat=true
  ###############以上为配置druid添加的配置########################################

# 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
# 如果是放在resource目录 classpath:/mapper/*Mapper.xml

mybatis-plus:
  mapper-locations: classpath:/mapping/*.xml
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名
  type-aliases-package: com.thatman.testservice.entity
  # 数据库表与实体类的驼峰命名自动转换
  configuration:
    map-underscore-to-camel-case: true


